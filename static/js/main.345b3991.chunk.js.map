{"version":3,"sources":["component/Statistics/Statistics.module.css","component/FeedbackOptions/FeedbackOptions.module.css","component/Section/Section.module.css","component/Notification/Notification.module.css","component/Statistics/Statistics.js","component/FeedbackOptions/FeedbackOptions.js","component/Section/Section.js","component/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","statistics","list","FeedbackOptions","options","onLeaveFeedback","feedback","map","option","type","button","name","onClick","toUpperCase","slice","Section","title","children","section","Notification","message","App","state","leaveFeedback","item","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,iBCArED,EAAOC,QAAU,CAAC,SAAW,kCAAkC,OAAS,kC,gBCAxED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,QAAU,gC,sMCuBbC,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAIC,UAAWC,IAAEC,WAAjB,UACE,qBAAIF,UAAWC,IAAEE,KAAjB,mBAA8BR,EAA9B,OACA,qBAAIK,UAAWC,IAAEE,KAAjB,sBAAiCP,EAAjC,OACA,qBAAII,UAAWC,IAAEE,KAAjB,kBAA6BN,KAC7B,qBAAIG,UAAWC,IAAEE,KAAjB,oBAA+BL,KAC/B,qBAAIE,UAAWC,IAAEE,KAAjB,gCAA2CJ,EAA3C,Y,gBCgBSK,MAvBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKN,UAAWC,IAAEM,SAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLV,UAAWC,IAAEU,OACbC,KAAMH,EACNI,QAAS,kBAAMP,EAAgBG,IALjC,SAOGA,EAAO,GAAGK,cAAgBL,EAAOM,MAAM,IANnCN,S,gBCSAO,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASlB,UAAWC,IAAEkB,QAAtB,UACGF,GAAS,oBAAIjB,UAAWC,IAAEgB,MAAjB,SAAyBA,IAClCC,M,iBCJQ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,qBAAKrB,UAAWC,IAAEoB,QAAlB,SAA4BA,I,ICoDtBC,E,4MAjDbC,MAAQ,CACN5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP2B,cAAgB,SAAAC,GACd,EAAKC,UAAS,SAAAC,GAAS,sBAAQF,EAAOE,EAAUF,GAAQ,O,EAG1DG,mBAAqB,WAAO,IAAD,EACM,EAAKL,MACpC,OAFyB,EACjB5B,KADiB,EACXC,QADW,EACFC,K,EAGzBgC,gCAAkC,WAAO,IAC/BlC,EAAS,EAAK4B,MAAd5B,KACR,OAAOmC,KAAKC,MAAc,IAAPpC,EAAc,EAAKiC,uBAAyB,G,uDAGvD,IAAD,EACwBI,KAAKT,MAA5B5B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASoB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB0B,KAAKR,kBAI1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACiC,IAA9Be,KAAKJ,qBACJ,cAAC,EAAD,CACEjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkC,KAAKJ,qBACZ7B,mBAAoBiC,KAAKH,oCAG3B,cAACT,EAAD,CAAcC,QAAQ,+B,GA1ChBY,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.345b3991.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2B41U\",\"list\":\"Statistics_list__18PmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__1PT0q\",\"button\":\"FeedbackOptions_button__2pv32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2Bk2K\",\"title\":\"Section_title__37Tz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__jZFVk\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul className={s.statistics}>\n      <li className={s.list}>Good: {good} </li>\n      <li className={s.list}>Neutral: {neutral} </li>\n      <li className={s.list}>Bad: {bad}</li>\n      <li className={s.list}>Total: {total}</li>\n      <li className={s.list}>Pozitive feedback: {positivePercentage}% </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.feedback}>\n      {options.map(option => (\n        <button\n          key={option}\n          type=\"button\"\n          className={s.button}\n          name={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option[0].toUpperCase() + option.slice(1)}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  option: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h1 className={s.title}>{title}</h1>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <div className={s.message}>{message}</div>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport Statistics from './component/Statistics/Statistics';\nimport FeedbackOptions from './component/FeedbackOptions/FeedbackOptions';\nimport Section from './component/Section/Section';\nimport Notification from './component/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = item => {\n    this.setState(prevState => ({ [item]: prevState[item] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good * 100) / this.countTotalFeedback()) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}